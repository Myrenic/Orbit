---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic-service.name" . }}
  labels:
    {{- include "generic-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 2
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "generic-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.database.enabled .Values.podAnnotations .Values.configMaps .Values.secretEnvs }}
      annotations:
      {{- if .Values.database.enabled }}
        checksum/database: {{ toJson .Values.database | sha256sum }}
      {{- end }}
      {{- if .Values.configMaps }}
        checksum/configmap: {{ toJson .Values.configMaps | sha256sum }}
      {{- end }}
      {{- if .Values.secretEnvs }}
        checksum/secrets: {{ toJson .Values.secretEnvs | sha256sum }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end}}
      {{- end }}
      labels:
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end}}
        {{- include "generic-service.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "generic-service.name" . }}
      enableServiceLinks: false
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- if .Values.hostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      dnsConfig:
        options:
        - name: ndots
          value: "1"
    {{- if or .Values.hostPaths .Values.database.enabled .Values.envsubst.files }}
      initContainers:
      {{- if .Values.hostPaths }}
      - name: prepare-storage
        image: "{{ .Values.helper.image.repository }}:{{ .Values.helper.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        command:
        - /bin/sh
        args:
        - -c
        - |
          set -ex;
          {{- range .Values.hostPaths }}
          {{- if not (has .type (list "CharDevice")) }}
          chmod 777 {{ .containerPath | quote }};
          {{- end }}
          {{- end }}
        volumeMounts:
        {{- range .Values.hostPaths }}
        - name: {{ .name }}
          mountPath: {{ .containerPath | quote }}
        {{- end }}
        {{- end }}
      {{- if .Values.database.enabled }}
      - name: wait-for-db
        image: "{{ .Values.wait4x.image.repository }}:{{ .Values.wait4x.image.tag }}"
        args:
        - tcp
        - {{ include "database.name" . }}:{{ include "database.port" . }}
      {{- end }}
      {{- if .Values.envsubst.files }}
      - name: envsubst
        image: "{{ .Values.envsubst.image.repository }}:{{ .Values.envsubst.image.tag }}"
        command:
        - /bin/sh
        args:
        - -c
        - |
          {{- range .Values.envsubst.files }}
          envsubst < "{{ .src }}" > "{{ .dest }}"
          {{- end }}
        env:
        {{- include "generic-service.envs" . | nindent 8 }}
        volumeMounts:
        - name: envsubst
          mountPath: /envsubst
        {{- range .Values.configMaps }}
        - name: cm-{{ .name }}
          mountPath: {{ printf "%s/%s" .mountPath .subPath | quote }}
          subPath: {{ .subPath | quote }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ include "generic-service.name" . }}
        securityContext: {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- with .Values.command }}
        command: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.args }}
        args: {{ toYaml . | nindent 8 }}
        {{- end }}
        env:
        {{- include "generic-service.envs" . | nindent 8 }}
      {{- if .Values.ports }}
        ports:
        {{- range .Values.ports }}
        - name: {{ .name }}
          containerPort: {{ .containerPort }}
          protocol: {{ .protocol | default "TCP" }}
          {{- if .hostPort }}
          hostPort: {{ .hostPort }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if and .Values.ports .Values.health.enabled }}
        startupProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
          failureThreshold: {{ .Values.health.startupProbeSeconds }}
          periodSeconds: 1
        livenessProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
        readinessProbe:
          {{- include "generic-service.podHealthCheck" . | indent 10 }}
      {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if or .Values.configMaps .Values.hostPaths .Values.envsubst.files .Values.emptyDirs .Values.pvcs }}
        volumeMounts:
        {{- if .Values.envsubst.files }}
        - name: envsubst
          mountPath: /envsubst
        {{- end }}
        {{- range .Values.configMaps }}
        - name: cm-{{ .name }}
          mountPath: {{ printf "%s/%s" .mountPath .subPath | quote }}
          subPath: {{ .subPath | quote }}
        {{- end }}
        {{- range .Values.devices }}
        - name: {{ .name }}
          mountPath: {{ .path }}
        {{- end }}
        {{- range .Values.emptyDirs }}
        - name: emptydir-{{ .name }}
          mountPath: {{ .containerPath | quote }}
        {{- end }}
        {{- range .Values.pvcs }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
        {{- end }}
        {{- end -}}
      {{- if or .Values.configMaps .Values.hostPaths .Values.envsubst.files .Values.emptyDirs .Values.pvcs }}
      volumes:
      {{- range .Values.pvcs }}
      - name: {{ .name }}
        {{- if eq .type "secret" }}
        secret:
          secretName: {{ .secretName }}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ if eq .type "nfs" }}{{ .name }}-pvc{{ else }}{{ .name }}{{ end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- range .Values.devices }}
      - name: {{ .name }}
        hostPath:
          path: {{ .path }}
          type: Directory
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
