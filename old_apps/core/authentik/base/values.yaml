---
rbac:
  create: true

global:
  env:
    - name: AUTHENTIK_SECRET_KEY
      valueFrom:
        secretKeyRef:
          key: secret-key
          name: authentik-secret
    - name: AUTHENTIK_POSTGRESQL__PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: authentik-secret
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      valueFrom:
        secretKeyRef:
          key: bootstrap-password
          name: authentik-secret
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      valueFrom:
        secretKeyRef:
          key: bootstrap-email
          name: authentik-secret

server:
  extraEnvFrom:
    - secretRef:
        name: authentik-secret
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
      traefik.ingress.kubernetes.io/router.middlewares: edge-crowdsec-mw@kubernetescrd
    hosts:
      - auth.tuntelder.com
    tls:
      - hosts:
          - auth.tuntelder.com

  readinessProbe:
    httpGet:
      path: /-/health/ready/
      port: http
      scheme: HTTP
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
  livenessProbe:
    httpGet:
      path: /-/health/live/
      port: http
      scheme: HTTP
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10

postgresql:
  enabled: true
  auth:
    enablePostgresUser: false
    existingSecret: authentik-secret
    secretKeys:
      password: AUTHENTIK_POSTGRESQL__PASSWORD
  primary:
    persistence:
      enabled: true
      existingClaim: authentik-postgres-pvc

redis:
  enabled: true

# blueprints:
#   configMaps:
#     - authentik-blueprints
